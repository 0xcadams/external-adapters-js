name: Actions

on:
  push:
    branches:
      - k6_test_qa_adapter

jobs:
  run-basic-checks:
    name: Run linters and unit tests
    runs-on: ubuntu-latest
    environment: QA
    steps:
      - uses: actions/checkout@v2
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.QA_SDLC_AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.QA_SDLC_AWS_SECRET_KEY }}
      #     aws-region: ${{ secrets.QA_SDLC_AWS_REGION }}
      #     role-to-assume: ${{ secrets.QA_SDLC_AWS_ROLE_TO_ASSUME }}
      #     role-duration-seconds: 3600
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      # - name: Set Kubernetes Context
      #   uses: azure/k8s-set-context@v1
      #   with:
      #     method: kubeconfig
      #     kubeconfig: ${{ secrets.QA_SDLC_KUBECONFIG }}
      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '14.x'
      # - name: Install Yarn and setup project
      #   run: |
      #     npm install -g yarn
      #     yarn install
      #     yarn setup
      - name: Get adapters list to test from changes
        id: get-adapters-list
        run: |
          echo '::set-output name=DOES_THIS_TRANSFER::yes it does'
      - name: Build the adapter
        run: |
          echo "did it transfer ${{ steps.get-adapters-list.outputs.DOES_THIS_TRANSFER }}"
      - name: Push adapter image to ECR
        run: |
          echo "TODO"
      - name: Deploy the adapter
        run: |
          echo "TODO"
      # - name: Build the k6 payload
      #   run: |
      #     export UNIQUE_NAME=unique-name
      #     export ADAPTER_NAME=coingecko
      #     export IMAGE_PREFIX=${{ secrets.SDLC_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/k6
      #     # create the config
      #     yarn qa:flux:configure k6payload ${ADAPTER_NAME} ${UNIQUE_NAME}
      
      # K6 section
      # - name: Push k6 image to ecr
      #   run: |
      #     # Move to the k6 package and build/push
      #     set -x
      #     cd ./packages/k6
      #     echo "yarn build"
      #     yarn build
      #     export UNIQUE_NAME=unique-name
      #     echo "docker build"
      #     docker build -t ${{ secrets.SDLC_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/k6:${UNIQUE_NAME} .
      #     echo "docker push"
      #     docker push ${{ secrets.SDLC_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/k6:${UNIQUE_NAME}
      # - name: Deploy k6
      #   run: |
      #     set -x
      #     cd ./packages/k6
      #     export UNIQUE_NAME=unique-name
      #     helm upgrade k6-${UNIQUE_NAME} ./k8s \
      #       --install \
      #       --namespace k6-soak \
      #       --create-namespace \
      #       -f ./k8s/values.yaml \
      #       --set image.tag=${UNIQUE_NAME} \
      #       --set name=k6-${UNIQUE_NAME} \
      #       --wait

